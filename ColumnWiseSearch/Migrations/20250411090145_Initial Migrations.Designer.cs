// <auto-generated />
using System;
using ColumnWiseSearch.DataLibrary;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ColumnWiseSearch.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250411090145_Initial Migrations")]
    partial class InitialMigrations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ColumnWiseSearch.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Electronics",
                            CreatedDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "High performance laptop",
                            IsAvailable = true,
                            Name = "Laptop",
                            Price = 1200.00m
                        },
                        new
                        {
                            Id = 2,
                            Category = "Electronics",
                            CreatedDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Latest model smartphone",
                            IsAvailable = true,
                            Name = "Smartphone",
                            Price = 800.00m
                        },
                        new
                        {
                            Id = 3,
                            Category = "Audio",
                            CreatedDate = new DateTime(2022, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Noise cancelling headphones",
                            IsAvailable = false,
                            Name = "Headphones",
                            Price = 250.00m
                        },
                        new
                        {
                            Id = 4,
                            Category = "Kitchen",
                            CreatedDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Automatic coffee machine",
                            IsAvailable = true,
                            Name = "Coffee Maker",
                            Price = 150.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
